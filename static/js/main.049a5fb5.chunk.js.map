{"version":3,"sources":["redux/reducers/users.js","redux/reducers/messages.js","redux/reducers/index.js","redux/actionTypes.js","redux/store.js","shared/style.js","components/ChatInput/index.jsx","redux/actions.js","components/ChatHistory/index.jsx","components/ChatView/index.jsx","ChatApp.jsx","index.js"],"names":["initialState","users","userCounter","rootReducer","combineReducers","state","action","type","payload","messages","store","createStore","palette","ChatInput","props","user","useState","message","setMessage","dispatch","useDispatch","InputGroup","Input","componentClass","value","onChange","val","Button","onClick","replace","length","createdAt","Date","Icon","icon","Container","styled","div","Message","right","center","Body","p","Div","Time","ChatHistory","currentUser","useSelector","ref","useRef","useEffect","current","scrollTo","scrollHeight","map","m","isCurrent","isAdmin","key","getTime","toLocaleString","Card","Header","h4","Math","floor","random","Content","InputContainer","ChatView","usersCount","IconButton","userToRemove","filter","usr","size","H1","h1","ReactDOM","render","Navbar","appearance","className","Nav","pullRight","Item","document","getElementById"],"mappings":"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","file":"static/js/main.049a5fb5.chunk.js","sourcesContent":["import { ADD_USER, REMOVE_USER } from '../actionTypes';\n\nconst initialState = {\n\tusers: [1, 2],\n\tuserCounter: 3,\n};\n\nexport const users = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase ADD_USER: {\n\t\t\treturn {\n\t\t\t\tusers: [...state.users, state.userCounter],\n\t\t\t\tuserCounter: state.userCounter + 1,\n\t\t\t};\n\t\t}\n\t\tcase REMOVE_USER: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tusers: [...action.payload],\n\t\t\t};\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import { SEND_MESSAGE, NEW_USER_MESSAGE } from '../actionTypes';\n\nconst initialState = [];\n\nexport const messages = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase NEW_USER_MESSAGE:\n\t\tcase SEND_MESSAGE: {\n\t\t\treturn [...state, { ...action.payload }];\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import { combineReducers } from 'redux';\nimport { users } from './users';\nimport { messages } from './messages';\n\nexport const rootReducer = combineReducers({ users, messages });\n","export const ADD_USER = 'ADD_USER';\nexport const NEW_USER_MESSAGE = 'NEW_USER_MESSAGE';\nexport const REMOVE_USER = 'REMOVE_USER';\nexport const SEND_MESSAGE = 'SEND_MESSAGE';\n","import { createStore } from 'redux';\nimport { rootReducer } from './reducers';\n\nexport const store = createStore(rootReducer);\n","export const palette = [\n\t'#34c3ff',\n\t'#3498ff',\n\t'#2575fc',\n\t'#0052cc',\n\t'#1361aa',\n\t'#3f51b5',\n\t'#2487c2',\n\t'#ffeb3b',\n\t'#f5a623',\n\t'#f44336',\n\t'#e54304',\n\t'#e91e63',\n\t'#9c27b0',\n\t'#429321',\n\t'#4a148c',\n\t'#673ab7',\n\t'#607d8b',\n\t'#880061',\n];\n","import React, { useState } from 'react';\nimport { Icon, Input, InputGroup } from 'rsuite';\nimport { useDispatch } from 'react-redux';\nimport { PropTypes } from 'prop-types';\nimport { sendMessage } from '../../redux/actions';\n\nexport const ChatInput = (props) => {\n\tconst { user } = props;\n\tconst [message, setMessage] = useState('');\n\tconst dispatch = useDispatch();\n\n\tconst handleChange = (val) => {\n\t\tsetMessage(val);\n\t};\n\tconst handleSubmit = () => {\n\t\tif (message && message.replace(/\\s/g, '').length) {\n\t\t\tdispatch(sendMessage({ user, message, createdAt: new Date() }));\n\t\t}\n\t\tsetMessage('');\n\t};\n\n\treturn (\n\t\t<InputGroup>\n\t\t\t<Input componentClass=\"textarea\" value={message} onChange={handleChange} />\n\t\t\t<InputGroup.Button onClick={handleSubmit}>\n\t\t\t\t<Icon icon=\"send\" />\n\t\t\t</InputGroup.Button>\n\t\t</InputGroup>\n\t);\n};\n\nChatInput.propTypes = {\n\tuser: PropTypes.number.isRequired,\n};\n","import { ADD_USER, NEW_USER_MESSAGE, REMOVE_USER, SEND_MESSAGE } from './actionTypes';\n\nexport const addUser = () => ({\n\ttype: ADD_USER,\n});\n\nexport const removeUser = (newUserList) => ({\n\ttype: REMOVE_USER,\n\tpayload: newUserList,\n});\n\nexport const sendMessage = (content) => ({\n\ttype: SEND_MESSAGE,\n\tpayload: content,\n});\n\nexport const newUserMessage = (newUser) => ({\n\ttype: NEW_USER_MESSAGE,\n\tpayload: {\n\t\tuser: 'admin',\n\t\tmessage: `User ${newUser} joined the chat`,\n\t\tcreatedAt: new Date(),\n\t},\n});\n","import React, { useRef, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Container = styled.div`\n\tdisplay: flex;\n\tjustify-content: flex-start;\n\tflex-direction: column;\n\toverflow-y: auto;\n\twidth: 100%;\n\theight: calc(100% - 120px);\n`;\n\nconst Message = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tfont-size: 2rem;\n\tbackground-color: rgba(242, 250, 255, 0.7);\n\tborder-radius: 5px;\n\tpadding: 0.5rem;\n\tmin-width: 10%;\n\tmargin-bottom: 0.5rem;\n\t${({ right, center }) => {\n\t\tif (right) {\n\t\t\treturn `\n\t\t\t\talign-self: flex-end;\n\t\t\t\talign-items: flex-end;\n\t\t\t`;\n\t\t}\n\t\tif (center) {\n\t\t\treturn `\n\t\t\t\talign-self: center;\n\t\t\t\tjustify-content: center;\n\t\t\t`;\n\t\t}\n\t\treturn 'align-self: flex-start';\n\t}};\n`;\n\nMessage.Body = styled.p`\n\tmargin: 0;\n\tword-wrap: break-word;\n\tword-break: break-all;\n\toverflow-wrap: break-word;\n`;\n\nconst Div = styled.div`\n\tfont-size: 0.7em;\n\tfont-weight: bold;\n`;\n\nconst Time = styled.div`\n\tfont-size: 0.5em;\n`;\n\nexport const ChatHistory = (props) => {\n\tconst { currentUser } = props;\n\tconst messages = useSelector((state) => state.messages);\n\n\tconst ref = useRef();\n\n\tuseEffect(() => {\n\t\tif (ref.current) {\n\t\t\tref.current.scrollTo(0, ref.current.scrollHeight);\n\t\t}\n\t}, [messages]);\n\n\treturn (\n\t\t<Container ref={ref}>\n\t\t\t{messages.map((m) => {\n\t\t\t\tconst isCurrent = m.user === currentUser;\n\t\t\t\tconst isAdmin = m.user === 'admin';\n\n\t\t\t\treturn (\n\t\t\t\t\t<Message key={m.message + m.createdAt.getTime()} right={isCurrent} center={isAdmin}>\n\t\t\t\t\t\t{!isAdmin && !isCurrent && <Div>User {m.user}</Div>}\n\t\t\t\t\t\t{!isAdmin && <Time>{m.createdAt.toLocaleString()}</Time>}\n\t\t\t\t\t\t<Message.Body>{m.message}</Message.Body>\n\t\t\t\t\t</Message>\n\t\t\t\t);\n\t\t\t})}\n\t\t</Container>\n\t);\n};\n\nChatHistory.propTypes = {\n\tcurrentUser: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Icon, IconButton } from 'rsuite';\nimport styled from 'styled-components';\nimport { removeUser } from '../../redux/actions';\nimport { palette } from '../../shared/style';\nimport { ChatInput } from '../ChatInput';\nimport { ChatHistory } from '../ChatHistory';\n\nconst Card = styled.div`\n\twidth: 400px;\n\theight: 568px;\n\tborder-radius: 6px;\n\tbox-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\n\tposition: relative;\n\toverflow: hidden;\n\tmargin: 0.5rem;\n`;\n\nCard.Header = styled.h4`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tflex-direction: row;\n\tfont-size: 2rem;\n\tfont-weight: bold;\n\tpadding: 0.5rem 1rem;\n\tbackground-color: ${({ user }) => {\n\t\tif (user < palette.length) {\n\t\t\treturn palette[user];\n\t\t}\n\t\treturn palette[Math.floor(Math.random() * palette.length)];\n\t}};\n\tcolor: #ffffff;\n`;\n\nCard.Content = styled.div`\n\tpadding: 1rem;\n\twidth: 100%;\n\theight: 100%;\n`;\n\nconst InputContainer = styled.div`\n\tposition: absolute;\n\tbottom: 0;\n\tleft: 0;\n\tright: 0;\n`;\n\nexport const ChatView = (props) => {\n\tconst { user, usersCount } = props;\n\tconst dispatch = useDispatch();\n\tconst { users } = useSelector((state) => state.users);\n\n\tconst filteredUsers = (userToRemove, state) => state.filter((usr) => usr !== userToRemove);\n\n\tconst handleUserRemoval = () => {\n\t\tdispatch(removeUser(filteredUsers(user, users)));\n\t};\n\n\treturn (\n\t\t<Card>\n\t\t\t<Card.Header user={user}>\n\t\t\t\tUser {user}\n\t\t\t\t{usersCount > 2 && <IconButton onClick={handleUserRemoval} size=\"xs\" icon={<Icon icon=\"close\" />} />}\n\t\t\t</Card.Header>\n\t\t\t<Card.Content>\n\t\t\t\t<ChatHistory currentUser={user} />\n\t\t\t\t<InputContainer>\n\t\t\t\t\t<ChatInput user={user} />\n\t\t\t\t</InputContainer>\n\t\t\t</Card.Content>\n\t\t</Card>\n\t);\n};\n\nChatView.propTypes = {\n\tuser: PropTypes.number.isRequired,\n\tusersCount: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Container, Header, Nav, Navbar, Icon } from 'rsuite';\nimport styled from 'styled-components';\nimport { ChatView } from './components';\nimport { addUser, newUserMessage } from './redux/actions';\nimport 'rsuite/dist/styles/rsuite-default.css';\n\nconst H1 = styled.h1`\n\tfont-size: 3rem;\n\tline-height: 2em;\n\tmargin-left: 1rem;\n`;\n\nconst Content = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex-wrap: wrap;\n\tpadding: 1rem;\n`;\n\nexport const ChatApp = () => {\n\tconst { users, userCounter } = useSelector((state) => state.users);\n\tconst dispatch = useDispatch();\n\tconst handleAddUser = () => {\n\t\tdispatch(addUser());\n\t\tdispatch(newUserMessage(userCounter));\n\t};\n\n\treturn (\n\t\t<Container>\n\t\t\t<Header>\n\t\t\t\t<Navbar appearance=\"inverse\">\n\t\t\t\t\t<Navbar.Header>\n\t\t\t\t\t\t<H1 className=\"navbar-brand logo\">Home Test</H1>\n\t\t\t\t\t</Navbar.Header>\n\t\t\t\t\t<Navbar.Body>\n\t\t\t\t\t\t<Nav pullRight onClick={handleAddUser}>\n\t\t\t\t\t\t\t<Nav.Item icon={<Icon icon=\"plus\" />}>Create New User</Nav.Item>\n\t\t\t\t\t\t</Nav>\n\t\t\t\t\t</Navbar.Body>\n\t\t\t\t</Navbar>\n\t\t\t</Header>\n\t\t\t<Content>\n\t\t\t\t{users.map((usr) => (\n\t\t\t\t\t<ChatView key={usr} user={usr} usersCount={users.length} />\n\t\t\t\t))}\n\t\t\t</Content>\n\t\t</Container>\n\t);\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport './index.css';\nimport { ChatApp } from './ChatApp';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<ChatApp />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}